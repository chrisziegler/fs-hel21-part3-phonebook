{"version":3,"sources":["components/Filter.js","components/Persons.js","services/persons.js","components/PersonForm.js","App.js","index.js"],"names":["Filter","searchTerm","setSearchTerm","value","onChange","e","target","Persons","person","handleDelete","name","number","className","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PersonForm","persons","setPersons","setSuccessMessage","setErrorMessage","useState","newEntry","setNewEntry","type","event","preventDefault","nameObject","inDB","some","p","toLowerCase","window","confirm","find","personService","updatedPerson","Error","map","setTimeout","catch","error","message","people","returnedPerson","concat","Notification","successMessage","errorMessage","App","filter","setFilter","useEffect","initialNumbers","results","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af275759.chunk.js","sourcesContent":["const Filter = ({ searchTerm, setSearchTerm }) => {\r\n  const handleSearch = e => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  return <input value={searchTerm} onChange={handleSearch} />;\r\n};\r\n\r\nexport default Filter;\r\n","const Persons = ({ person, handleDelete }) => {\r\n  return (\r\n    <li>\r\n      {person.name} {person.number}\r\n      <button className=\"delete\" onClick={() => handleDelete(person)}>\r\n        X\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (newObject, id) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default { getAll, create, update, remove }\r\n","import { useState } from 'react'\r\nimport personService from '../services/persons'\r\n\r\nconst PersonForm = ({\r\n  persons,\r\n  setPersons,\r\n  setSuccessMessage,\r\n  setErrorMessage,\r\n}) => {\r\n  const [newEntry, setNewEntry] = useState({\r\n    name: '',\r\n    number: '',\r\n  })\r\n\r\n  const handleNameInput = e => {\r\n    setNewEntry({ ...newEntry, name: e.target.value })\r\n  }\r\n\r\n  const handleNumberInput = e => {\r\n    setNewEntry({ ...newEntry, number: e.target.value })\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    const nameObject = { name: newEntry.name, number: newEntry.number }\r\n    let inDB = persons.some(\r\n      p => p.name.toLowerCase() === newEntry.name.toLowerCase(),\r\n    )\r\n    // if input name is unique ...\r\n    if (!inDB) {\r\n      personService\r\n        .create(nameObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setSuccessMessage(`Added ${returnedPerson.name}`)\r\n          setTimeout(() => {\r\n            setSuccessMessage(null)\r\n          }, 5000)\r\n          setNewEntry({ name: '', number: '' })\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(error.response.data.error)\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n          }, 5000)\r\n        })\r\n      // input name  exits - update confirmation\r\n    } else if (inDB) {\r\n      const confirmed = window.confirm(\r\n        `'${newEntry.name}' already exists, replace phone number?`,\r\n      )\r\n      // 'Cancel' pop-up\r\n      if (confirmed === false) {\r\n        setNewEntry({ name: '', number: '' })\r\n        return\r\n      }\r\n      // 'Enter' pop-up\r\n      const { id } = persons.find(\r\n        person =>\r\n          person.name.toLowerCase() === newEntry.name.toLowerCase(),\r\n      )\r\n      personService\r\n        .update(nameObject, id)\r\n        .then(updatedPerson => {\r\n          // multi-tab browser case, with entry deleted in 1, then # update attempted in the other\r\n          if (updatedPerson === null) {\r\n            throw new Error(\r\n              `'${newEntry.name}' was already removed from server`,\r\n            )\r\n            // normal update response\r\n          } else {\r\n            setPersons(\r\n              persons.map(person =>\r\n                person.id !== id ? person : updatedPerson,\r\n              ),\r\n            )\r\n            setSuccessMessage(`Updated the number`)\r\n            setNewEntry({ name: '', number: '' })\r\n            setTimeout(() => {\r\n              setSuccessMessage(null)\r\n            }, 5000)\r\n          }\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(error.message)\r\n          setNewEntry({ name: '', number: '' })\r\n          setTimeout(() => {\r\n            setErrorMessage(null)\r\n            personService.getAll().then(people => {\r\n              setPersons(people)\r\n            })\r\n          }, 5000)\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <div>\r\n        name:\r\n        <input value={newEntry.name} onChange={handleNameInput} />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input value={newEntry.number} onChange={handleNumberInput} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" onClick={handleSubmit}>\r\n          add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import { useState, useEffect } from 'react'\n\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\n\nconst Notification = ({ successMessage, errorMessage }) => {\n  if (successMessage === null && errorMessage === null) {\n    return null\n  } else if (errorMessage) {\n    return <div className=\"error\">{errorMessage}</div>\n  }\n  return <div className=\"success\">{successMessage}</div>\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [searchTerm, setSearchTerm] = useState('')\n  const [filter, setFilter] = useState([])\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then(initialNumbers => {\n      setPersons(initialNumbers)\n    })\n  }, [])\n\n  useEffect(() => {\n    const results = persons.filter(person =>\n      person?.name?.toLowerCase().includes(searchTerm.toLowerCase()),\n    )\n    if (results) {\n      setFilter(results)\n    }\n  }, [searchTerm, persons])\n\n  const handleDelete = ({ id, name }) => {\n    let confirmed = window.confirm(`Delete ${name}?`)\n    if (confirmed) {\n      personService\n        .remove(id)\n        .then(setPersons(persons.filter(person => person.id !== id)))\n    } else {\n      return\n    }\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification\n        successMessage={successMessage}\n        errorMessage={errorMessage}\n      />\n      <Filter setSearchTerm={setSearchTerm} searchTerm={searchTerm} />\n      <h2>add a new</h2>\n      <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        setSuccessMessage={setSuccessMessage}\n        setErrorMessage={setErrorMessage}\n      />\n      <h2>Numbers</h2>\n      <ul>\n        {filter.map(person => (\n          <Persons\n            key={person.name}\n            person={person}\n            handleDelete={handleDelete}\n          />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}