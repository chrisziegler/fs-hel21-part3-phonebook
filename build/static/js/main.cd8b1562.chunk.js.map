{"version":3,"sources":["components/Filter.js","components/Persons.js","services/persons.js","components/PersonForm.js","App.js","index.js"],"names":["Filter","searchTerm","setSearchTerm","value","onChange","e","target","Persons","person","handleDelete","name","number","className","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","PersonForm","persons","setPersons","setSuccessMessage","setErrorMessage","useState","newName","setNewName","newNumber","setNewNumber","handleSubmit","a","preventDefault","nameObject","some","personService","returnedPerson","concat","setTimeout","window","confirm","find","updatedPerson","map","type","Notification","successMessage","errorMessage","App","filter","setFilter","useEffect","initialNumbers","results","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd8b1562.chunk.js","sourcesContent":["const Filter = ({ searchTerm, setSearchTerm }) => {\r\n  const handleSearch = e => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  return <input value={searchTerm} onChange={handleSearch} />;\r\n};\r\n\r\nexport default Filter;\r\n","const Persons = ({ person, handleDelete }) => {\r\n  return (\r\n    <li>\r\n      {person.name} {person.number}\r\n      <button className=\"delete\" onClick={() => handleDelete(person)}>\r\n        X\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (newObject, id) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default { getAll, create, update, remove }\r\n","import { useState } from 'react'\r\nimport personService from '../services/persons'\r\n\r\nconst PersonForm = ({\r\n  persons,\r\n  setPersons,\r\n  setSuccessMessage,\r\n  setErrorMessage,\r\n}) => {\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n\r\n  const handleNameInput = e => {\r\n    setNewName(e.target.value)\r\n  }\r\n  const handleNumberInput = e => {\r\n    setNewNumber(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault()\r\n    const nameObject = { name: newName, number: newNumber }\r\n    try {\r\n      // Check if name is already in use\r\n      if (!persons.some(person => person.name === newName)) {\r\n        let returnedPerson = await personService.create(nameObject)\r\n        setPersons(persons.concat(returnedPerson))\r\n        setNewName('')\r\n        setNewNumber('')\r\n\r\n        setSuccessMessage(`Added ${newName}`)\r\n        setTimeout(() => {\r\n          setSuccessMessage(null)\r\n        }, 5000)\r\n      } else {\r\n        window.confirm(\r\n          `${newName} is already added to phonebook, replace old number with a new one?`,\r\n        )\r\n        const { id } = persons.find(\r\n          person => person.name === nameObject.name,\r\n        )\r\n\r\n        let updatedPerson = await personService.update(nameObject, id)\r\n        setPersons(\r\n          persons.map(person =>\r\n            person.id !== id ? person : updatedPerson,\r\n          ),\r\n        )\r\n        setNewName('')\r\n        setNewNumber('')\r\n        setSuccessMessage(`Updated the phone number for ${newName}`)\r\n        setTimeout(() => {\r\n          setSuccessMessage(null)\r\n        }, 5000)\r\n      }\r\n    } catch (err) {\r\n      setErrorMessage(\r\n        `Information of ${newName} has already been deleted from server`,\r\n      )\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <div>\r\n        name:\r\n        <input value={newName} onChange={handleNameInput} />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input value={newNumber} onChange={handleNumberInput} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" onClick={handleSubmit}>\r\n          add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import { useState, useEffect } from 'react'\n\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\n\nconst Notification = ({ successMessage, errorMessage }) => {\n  if (successMessage === null && errorMessage === null) {\n    return null\n  } else if (errorMessage) {\n    return <div className=\"error\">{errorMessage}</div>\n  }\n  return <div className=\"success\">{successMessage}</div>\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [searchTerm, setSearchTerm] = useState('')\n  const [filter, setFilter] = useState([])\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then(initialNumbers => {\n      setPersons(initialNumbers)\n    })\n  }, [])\n\n  useEffect(() => {\n    const results = persons.filter(person =>\n      person.name.toLowerCase().includes(searchTerm.toLowerCase()),\n    )\n    setFilter(results)\n  }, [searchTerm, persons])\n\n  const handleDelete = ({ id, name }) => {\n    personService.remove(id).then(window.confirm(`Delete ${name}?`))\n    setPersons(persons.filter(person => person.id !== id))\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification\n        successMessage={successMessage}\n        errorMessage={errorMessage}\n      />\n      <Filter setSearchTerm={setSearchTerm} searchTerm={searchTerm} />\n      <h2>add a new</h2>\n      <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        setSuccessMessage={setSuccessMessage}\n        setErrorMessage={setErrorMessage}\n      />\n      <h2>Numbers</h2>\n      <ul>\n        {filter.map(person => (\n          <Persons\n            key={person.name}\n            person={person}\n            handleDelete={handleDelete}\n          />\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}